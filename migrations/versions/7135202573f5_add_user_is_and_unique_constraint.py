"""add user is and unique constraint

Revision ID: 7135202573f5
Revises: 907e05488f5b
Create Date: 2025-10-23 00:44:49.697429

"""

from typing import Sequence, Union

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "7135202573f5"
down_revision: Union[str, Sequence[str], None] = "907e05488f5b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_notebooks_name"), table_name="notebooks")
    op.create_index(op.f("ix_notebooks_name"), "notebooks", ["name"], unique=False)
    op.create_unique_constraint(
        "uq_user_notebook_name", "notebooks", ["user_id", "name"]
    )
    op.drop_index(op.f("ix_tags_name"), table_name="tags")
    op.create_unique_constraint("uq_user_tag_name", "tags", ["user_id", "name"])
    op.create_unique_constraint(None, "tags", ["name"])
    op.create_unique_constraint(
        "uq_user_template_name", "templates", ["user_id", "name"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_user_template_name", "templates", type_="unique")
    op.drop_constraint("uq_user_tag_name", "tags", type_="unique")
    op.create_index(op.f("ix_tags_name"), "tags", ["name"], unique=True)
    op.drop_constraint("uq_user_notebook_name", "notebooks", type_="unique")
    op.drop_index(op.f("ix_notebooks_name"), table_name="notebooks")
    op.create_index(op.f("ix_notebooks_name"), "notebooks", ["name"], unique=True)
    # ### end Alembic commands ###
